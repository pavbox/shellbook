#!bin/bash
#
# Create persistence storage for live usb
# Script based on guide: https://kali.org/prst
#


# check your memory devices
printf "\n\n"
printf "OUTPUT ALL DISKS AND PARTITIONS\n"
printf "===============================\n"

fdisk -l

# if you have 2 devices (disk and usb flash), then your flash called sdb

disk_id=""

printf "\n\n"

while : ; do
	echo "[!] Please, write your name of flash device: (as sda/sdb) "
	read disk_id

	read error _ < <(fdisk -l /dev/$disk_id)
	#if [[ "${$error/$"No such"}" = "$string" ]]; then
	
	shopt -s extglob

	[[ $error == ?(No\nsuch) ]] || break

	printf "%s\n" "$error"
	printf "Retry...\n"
done

printf "Your usb flash disk: "

flash_disk="/dev/$disk_id"

fdisk -l $flash_disk # check reachability

# set start and end sizes for new disk part (target on 8gb flash usb)

printf "\nParting started..."
read start _ < <(grep "primary" <(parted $flash_disk print) | tail -1 | awk '{print $3}')
end=7gb

printf "Start from $start to $end\n"

# make new part

parted $flash_disk mkpart primary $start $end


# get number of new part
read last_part_number _ < <(grep "primary" <(parted $flash_disk print) | tail -1 | awk '{print $1}')

# get full name of new part
last_partition="$flash_disk$last_part_number"


# encrypt file system or not?

printf "Do you have encrypted storage? (y/n) "
read isEncrypt

if [[ $isEncrypt == *"y"* ]]; then
	# encrypt, make new fs, mount
	cryptsetup --verbose --verify-passphrase luksFormat $last_partition
	cryptsetup luksOpen $last_partition portable_persistence

	mapper="/dev/mapper/portable_persistence"

	mkfs.ext3 -L persistence $mapper
	e2label $mapper persistence

	mkdir -p /mnt/portable_persistence
	mount $mapper /mnt/portable_persistence
	echo "/ union" > /mnt/portable_persistence/persistence.conf
	umount $mapper

	cryptsetup luksClose /dev/mapper/portable_persistence
else
	# not encrypt, make new fs, mount
	mkfs.ext3 -L persistence $last_partition
	e2label $last_partition persistence

	mkdir -p /mnt/portable_persistence
	mount $last_partition /mnt/portable_persistence
	echo "/ union" > /mnt/portable_persistence/persistence.conf
	umount $last_partition
fi

printf "\nPARTITION WAS COMPLETED\n"
